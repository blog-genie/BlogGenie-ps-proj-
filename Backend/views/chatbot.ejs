<!--
  AI Chatbot Interface
  Features:
  - Real-time AI interaction
  - Blog content generation
  - Markdown support
  - Export to blog editor
-->
<!DOCTYPE html>
<html lang="en">
<head>
    <!-- Meta tags for proper mobile rendering and character encoding -->
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    
    <!-- External Dependencies -->
    <!-- Tailwind for utility classes -->
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet" />
    <!-- Bootstrap for basic styling -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <!-- Highlight.js for code syntax highlighting -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/highlight.min.js"></script>
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/styles/a11y-dark.min.css"
    />
    <link
  href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css"
  rel="stylesheet"
/>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/marked/12.0.1/marked.min.js"></script>
    <link rel="stylesheet" href="/css/chatbot.css">
    <!-- Add this CSS -->
    <style>
        .ai-message-container {
            position: relative;
            width: 100%;
            margin-bottom: 20px;
        }
        .publish-btn {
            position: absolute;
            top: 10px;
            right: 10px;
            padding: 8px 15px;
            background-color: #1a1a1a;
            color: #ffffff;
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 6px;
            cursor: pointer;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 8px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.3);
            transition: all 0.2s ease;
            font-size: 0.9rem;
            z-index: 10;
            backdrop-filter: blur(5px);
        }
        .publish-btn:hover {
            background-color: #2d2d2d;
            border-color: rgba(255, 255, 255, 0.4);
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(0,0,0,0.4);
        }
        .publish-btn i {
            font-size: 1rem;
            color: #ffffff;
        }
        .publish-btn:active {
            transform: translateY(1px);
            box-shadow: 0 1px 4px rgba(0,0,0,0.4);
        }
    </style>
</head>
<body>
    <div id="Loader"></div>
    <div class="chat-container">
      <button id="home-btn" class="icon-btn" title="Home">
        <a href="/blogGenie">
          <i class="fas fa-home"></i>
        </a>
      </button>
      <button id="editor-btn" class="icon-btn" title="Editor">
        <a href="/blogGenie/new">
          <i class="fas fa-edit"></i>
        </a>
      </button>
        <div id="output-field" class="text-center">
            <h2>How can I help you today?</h2>
        </div>
        <div id="output-container"></div>
        <div class="input-group mb-0">
            <input
                type="text"
                id="prompt-input"
                class="form-control"
                placeholder="Type your prompt here..."
                aria-label="Message input"
            />
            <button id="generate-btn" class="btn btn-primary">Send</button>
        </div>
    </div>

    <!-- <div class="container">
      <div class="sidebar">
        <h2>Search History</h2>
        <ul id="history-list"></ul>
      </div>
      <div class="main">
        <div class="chatbox">
          <div id="chat-area">
            Chat messages will be added here
          </div>
          <div class="input-area">
            <input type="text" id="user-input" placeholder="Type your prompt here...">
            <button id="send-button">Send</button>
          </div>
        </div>
      </div>
    </div> -->

    <!-- <div class="container"> -->
      
      <!-- </div> -->
      <!-- <div class="main-panel">
          <h1>Your Website</h1>
          Add your website content here
      </div> -->
<!-- Below code is req for a search history tab -->
      <!-- <div class="history-panel">
        <h3>Search History</h3>
        <div id="history-list">
            </div> -->
  </div>

  

    <script type="importmap">
      {
        "imports": {
          "@google/generative-ai": "https://esm.run/@google/generative-ai"
        }
      }
    </script>

    <script src="/javascript/chatbot.js" type="module"></script>
    
    <script>
      // Function to display messages in the chat interface
      function displayMessage(message, sender) {
        // Check for the specific error message
        if (message === "This content is not safe for display based on current settings or an internal error.") {
            // Show message briefly before reload
            const outputContainer = document.getElementById("output-container");
            const msgDiv = document.createElement("div");
            msgDiv.classList.add("ai-message");
            msgDiv.innerHTML = message;
            outputContainer.appendChild(msgDiv);

            // Reload page after short delay (1.5 seconds)
            setTimeout(() => {
                window.location.reload();
            }, 1500);
            return;
        }

        // Rest of the existing displayMessage code...
        const outputContainer = document.getElementById("output-container");
        const msgDiv = document.createElement("div");
        msgDiv.classList.add(sender === "user" ? "user-message" : "ai-message");

        if (sender === "ai") {
            // Create container for AI message and publish button
            const containerDiv = document.createElement("div");
            containerDiv.className = "ai-message-container";
            
            // Add loading animation initially
            msgDiv.innerHTML = '<div class="loading"><div class="loading-dot"></div><div class="loading-dot"></div><div class="loading-dot"></div></div>';
            containerDiv.appendChild(msgDiv);
            outputContainer.appendChild(containerDiv);

            // Simulate processing delay
            setTimeout(() => {
                // Update message content
                msgDiv.innerHTML = marked.parse(message);
                
                // Add publish button with white text
                const publishBtn = document.createElement("button");
                publishBtn.className = "publish-btn";
                publishBtn.style.color = "#ffffff"; // Ensure text is white
                publishBtn.innerHTML = '<i class="fas fa-edit" style="color: #ffffff;"></i> <span style="color: #ffffff;">Create Blog</span>';
                publishBtn.onclick = () => publishToBlogEditor(message);
                containerDiv.appendChild(publishBtn);
                
                outputContainer.scrollTop = outputContainer.scrollHeight;
            }, 1500);
        } else {
            msgDiv.innerHTML = marked.parse(message);
            outputContainer.appendChild(msgDiv);
        }

        outputContainer.scrollTop = outputContainer.scrollHeight;
      }

      // Function to publish content to blog editor
      function publishToBlogEditor(content) {
          // Store the content temporarily
          localStorage.setItem('chatbotContent', content);
          
          // Redirect to blog editor
          window.location.href = '/blogGenie/new';
      }
    </script>

    
</body>
</html>